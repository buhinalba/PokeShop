package com.codecool.shop.business.logic;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import javax.mail.*;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.Properties;

public class EmailHandler {
    private static final DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd");
    private static final int TIME_OF_DELIVERY = 5;
    private static final Logger logger = LoggerFactory.getLogger(EmailHandler.class);
    public EmailHandler(){

    }
    public void sendMail(String receiverEmailAddress, String orderDetails) {
        // Put recipient’s address
        String to = receiverEmailAddress;

        // Put sender’s address
        String from = "staff@pokeShop.com";
        final String username = "dbb752b08814f6";//username generated by Mailtrap
        final String password = "8e9fbc64a707ee";//password generated by Mailtrap

        // Paste host address from the SMTP settings tab in your Mailtrap Inbox
        String host = "smtp.mailtrap.io";

        Properties props = new Properties();
        props.put("mail.smtp.auth", "true");
        props.put("mail.smtp.starttls.enable", "true");//it’s optional in Mailtrap
        props.put("mail.smtp.host", host);
        props.put("mail.smtp.port", "2525");// use one of the options in the SMTP settings tab in your Mailtrap Inbox

        // Get the Session object.
        Session session = Session.getInstance(props,
                new javax.mail.Authenticator() {
                    protected PasswordAuthentication getPasswordAuthentication() {
                        return new PasswordAuthentication(username, password);
                    }
                });
        try {
            // Create a default MimeMessage object.
            Message message = new MimeMessage(session);

            // Set From: header field
            message.setFrom(new InternetAddress(from));

            // Set To: header field
            message.setRecipients(Message.RecipientType.TO,
                    InternetAddress.parse(to));

            // Set Subject: header field
            message.setSubject("Order details");

            // Put the content of your message
            message.setContent(orderDetails, "text/html");

            // Send message
            Transport.send(message);

            logger.info("Sent message successfully.");

        } catch (MessagingException e) {
            logger.warn("Cannot send email.");
            throw new RuntimeException(e);
        }
    }
        public String getEstimatedDelivery(){
            Date currentDate = new Date();

            // convert date to calendar
            Calendar c = Calendar.getInstance();
            c.setTime(currentDate);
            // manipulate date
            c.add(Calendar.DATE, TIME_OF_DELIVERY);
            // convert calendar to date
            Date estimatedDelivery = c.getTime();
            return dateFormat.format(estimatedDelivery);
        }

}
